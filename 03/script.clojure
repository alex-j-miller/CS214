Script started on 2023-01-23 20:37:33-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="182" LINES="12"]
]0;ajm94@gold21: ~/Desktop/CS 214/Labs/03[01;32majm94@gold21[00m:[01;34m~/Desktop/CS 214/Labs/03[00m$ clojure -m year_codes[2Pat year_codes.clj 
;;;; year_codes.clj is a driver for function yearCode.
;;;;
;;;; Input: An academic year, one of {freshman, sophomore,
;;;;                                  junior, senior}.
;;;; Output: The code for that academic year
;;;;         (1, 2, 3, 4 for valid entries; 
;;;;          0 for invalid entries).
;;;;
;;;; Usage: clojure -m year_codes
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by:
;;;; Date:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns year_codes)                    ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; yearCode() returns the code for a given academic year.
;;; Receive: year, a string.
;;; Precondition: year is one of 
;;;   {freshman, sophomore, junior or senior}.
;;; Return: the integer code corresponding to year.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn yearCode [itsStr]
   (if (= itsStr "freshman") 1 (if (= itsStr "sophomore") 2 (if (= itsStr "junior") 3 (if (= itsStr "senior") 4 0))))              
)

;; solution using the cond function
(defn yearCode2 [year]
  (cond
    (= year "freshman")  1
    (= year "sophomore") 2
    (= year "junior")    3
    (= year "senior")    4
    :else                0
  )
)

;; solution using the case function
(defn yearCode3 [year]
  (case year
    "freshman"  1
    "sophomore" 2
    "junior"    3
    "senior"    4
                0 ; default
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Function -main() test-drives our yearCode() function.
;;; Input: year: one of {freshman, sophomore, junior, or senior}.
;;; Output: the code corresponding to year.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
 (print "\nEnter your academic year: ") (flush)
 (let
    [ year (read-line) ]                ; read year (a string)
    (println (yearCode year) "\n")      ; display its code
    (println (yearCode2 year) "\n")
    (println (yearCode3 year) "\n")
 )
)

]0;ajm94@gold21: ~/Desktop/CS 214/Labs/03[01;32majm94@gold21[00m:[01;34m~/Desktop/CS 214/Labs/03[00m$ cat year_codes.clj lojure -m year_codes[2Pat year_codes.clj lojure -m year_codes

Enter your academic year: junior
3 

3 

3 

]0;ajm94@gold21: ~/Desktop/CS 214/Labs/03[01;32majm94@gold21[00m:[01;34m~/Desktop/CS 214/Labs/03[00m$ clojure -m year_codes

Enter your academic year: 0
0 

0 

0 

]0;ajm94@gold21: ~/Desktop/CS 214/Labs/03[01;32majm94@gold21[00m:[01;34m~/Desktop/CS 214/Labs/03[00m$ exit

Script done on 2023-01-23 20:37:45-05:00 [COMMAND_EXIT_CODE="0"]
